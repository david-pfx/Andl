// Test Defer -- deferred variables and functions, blocks, user types

#catalog

start($filename$)

//--- defer
dv1 => 22
test_true($lineno$, 22 = dv1)

av1 := 22
dv2 => av1*2 + dv1*2
test_true($lineno$, 88 = dv2)

//--- arguments
def fn1(x:0) => x*10
test_true($lineno$, 30 = fn1(3))

def fn3(x:0) => seq(x)
test_true($lineno$, seq(4) = fn3(4))

def fact:0(n:0) => if(n<=1,1,n*fact(n-1))
test_true($lineno$, 720 = fact(6))

//--- do blocks
def pot:0(n:0) => do { if(n<=0,1,10*pot(n-1)) }
test_true($lineno$, 1000000 = pot(6))

def dfact:0(n:0) => do {
  nn => n*dfact(n-1)
  if(n<=1,1,nn)
}
test_true($lineno$, 720 = dfact(6))
test_true($lineno$, 2432902008176640000 = dfact(20))

//--- scopes
def fns0(t:'') => do {
  a := t & 'xxx'
  a
}
test_true($lineno$, 'xyzxxx' = fns0('xyz'))

def fns1(n:0) => do {
  a := n+2
  a - 2
}
test_true($lineno$, 7 = fns1(7))

rv1 := {{ A1:='abc', A2:=17 }}
def fns2(rr:rv1) => do {
  a := rr
  rr
}
test_true($lineno$, rv1 = fns2(rv1))

// --- user types as parameters

rv3 := {{ A2:number, A1:text }}
rv4 := {{ A1:='abc', A2:=17 }}
type usr1(A2:number, A1:text)
type usr2(A1:text, A2:number)

def fr1(arg:rv3) => do {
  a := arg
  a
}
def fr2(arg:rv4) => do {
  a := arg
  a
}
def fr3(arg:usr1) => do {
  a := arg
  a
}
def fr4(arg:usr2) => do {
  a := arg
  a
}

test_true($lineno$, rv4            = fr1(rv4))
test_true($lineno$, rv4            = fr2(rv4))
test_true($lineno$, usr1(3, 'abc')  = fr3(usr1(3, 'abc')))
test_true($lineno$, usr2('abc', 4)  = fr4(usr2('abc', 4)))

// --- stack check

fnret2 => do {
    {{}}
    1111
}
test_true($lineno$, 1111 = fnret2)
stv3 := fnret2
test_true($lineno$, 1111 = stv3)

fnret3 => do {
    type ut3(C1:0, C2:'')
    1112
}
test_true($lineno$, 1112 = fnret3)
stv4 := fnret3
test_true($lineno$, 1112 = stv4)

// -- overloads

def fov() => ''
def fov(a:'') => a
def fov(a:0) => '' & a
def fov(a:0,b:'') => a & b
def fov(a:'',b:0) => a & b
def fov(a:bool,b:number,c:text) => a & b & c

test_true($lineno$, '' = fov())
test_true($lineno$, 'xxx' = fov('xxx'))
test_true($lineno$, '0.2' = fov(1/5))
test_true($lineno$, 'xxx0.2' = fov('xxx',1/5))
test_true($lineno$, '0.2xxx' = fov(1/5,'xxx'))
test_true($lineno$, 'true0.2xxx' = fov(true,1/5,'xxx'))

finish($filename$)
//andl_catalog
