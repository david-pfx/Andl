// ThriftTest.andl

// Test routines for Thrift interface

// Run setup.bat to do some cleanup and these two steps.
// 1. Compile this with -t and output to <test> database
//      >Andl.exe ThriftTest.andl test -t
// 2. Compile generated interface with Thrift and csharp output
//      >Thrift --gen csharp ThriftTest.thrift

// Then do this.
// 3. Build the ThriftTest client: ThriftTest (compiles and links to generated code)
// 4. Run the Thrift server (Ctrl+C to shut down): 
//      >Andl.Thrift.exe test
// 5. From another session, run the ThriftTest client
//      >ThriftTest.exe
//

#catalog new update

type ut2(AN:number,AS:text)
type ut4(AB:bool,AD:time,AN:number,AS:text)
type ut3(AN:number,AS:text,AU:ut2)

VB := true
VD := t'31/12/2015'
VI := 98765
VN := 123579.68
VS := "This is a string"
VU := ut4(true,t'31/10/2015',123.45009,"A component string")
VUU := ut3(1234.567, "A nested string", ut2(1234.568, "An inner string"))

// two that match
VT5 := { AB := true, AD := t'30/11/2015', AI := 55667, AN := 123.45002, AS := "An attribute string 1" }
VR5 := {
    { AB := true, AD := t'30/10/2015', AI := 55667, AN := 123.45001, AS := "An attribute string 2" },
    { AB := true, AD := t'30/09/2015', AI := 55668, AN := 123.45002, AS := "An attribute string 3" },
}
// two that don't
VT4 := { AB := true, AD := t'30/11/2015', AI := 55667, AS := "An attribute string 6" }
VR4 := {
    { AB := true, AD := t'30/10/2015', AN := 123.45001, AS := "An attribute string 4" },
    { AB := true, AD := t'30/09/2015', AN := 123.45002, AS := "An attribute string 5" },
}
VT2 := { AN := 183, AU := ut2(1830, "ut2 string") }
VR2 := {
    { AN := 183, AU := ut2(1830, "ut2 string 2") },
    { AN := 184, AU := ut2(1830, "ut2 string 3") },
}

GetVB => VB
GetVD => VD
GetVI => VI
GetVN => VN
GetVS => VS
GetVU => VU
GetVUU => VUU
GetVT5 => VT5
GetVR5 => VR5
GetVR4 => VR4
GetVT4 => VT4
GetVR2 => VR2
GetVT2 => VT2
GetVConcat => VB & VD & VI & VN & VS
//GetTofR5 => VR5 .select{*} 

def GetFB(v:VB) => v
def GetFD(v:VD) => v
def GetFI(v:VI) => v
def GetFN(v:VN) => v
def GetFS(v:VS) => v
def GetFU(v:VU) => v
def GetFUU(v:VUU) => v
def GetFT5(v:VT5) => v 
def GetFR5(v:VR5) => v 
def GetFT4(v:VT4) => v
def GetFR4(v:VR4) => v 
def GetFT2(v:VT2) => v
def GetFR2(v:VR2) => v 
def GetFConcat(v1:VB,v2:VD,v3:VI,v4:VN,v5:VS) => v1 & v2 & v3 & v4 & v5

def AddVR2(r:VR2) => do {
    update VR2 union r
}
def AddVR4(r:VR4) => do {
    update VR4 union r
}
def AddVR5(r:VR5) => do {
    update VR5 union r
}

DoErrorA => '123ab'.number
DoErrorB => fail('test', 'this is a fail')

// now we call them

//GetVB 
//GetVD 
//GetVI 
//GetVN 
//GetVS 
//GetVU
//GetVUU
//GetVT5
//GetVR5
//GetVR4
//GetVT4
//GetVR2
//GetVT2
//GetVConcat
////GetTofR5
//GetFB(false)
//GetFD(t'30/08/2015')
//GetFI(554433)
//GetFN(12344.3322)
//GetFS("This is an argument string")
//GetFU(ut4(false,t'31/07/2015',123.45010,"An argument string"))
//GetFUU(ut3(1234.569, "A nested string", ut2(1234.5699, "An inner string")))
//GetFT4( { AB := true, AD := t'30/07/2015', AI := 55666, AS := "An attribute string 7" } )
//GetFR4({{ AB := true, AD := t'30/05/2015', AN := 123.45055, AS := "An attribute string 9" },
//        { AB := true, AD := t'30/04/2015', AN := 123.45044, AS := "An attribute string 10" },
//})
//GetFT5({ AB := true, AD := t'30/06/2015', AI := 55665, AN := 123.45100, AS := "An attribute string 8" })
//GetFR5({{ AB := true, AD := t'30/03/2015', AI := 55663, AN := 123.45033, AS := "An attribute string 12" },
//        { AB := true, AD := t'30/01/2015', AI := 55662, AN := 123.45022, AS := "An attribute string 13" },
//})
//GetFT2( { AN := 185, AU := ut2(1830, "ut2 string x") } )
//GetFR2({ { AN := 186, AU := ut2(1830, "ut2 string y") }, { AN := 187, AU := ut2(1830, "ut2 string z") } })
//GetFConcat(true, t'31/01/2015', 554435, 123.45011, "An argument string 14")

//DoErrorA

andl_catalog
//andl_operator()

